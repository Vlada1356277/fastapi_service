"""initial migration

Revision ID: 203d8f999bc4
Revises: 
Create Date: 2024-06-03 18:28:24.637450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '203d8f999bc4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sensor_reading_id', table_name='sensor_reading')
    op.drop_table('sensor_reading')
    op.drop_index('ix_wireless_sensors_uid', table_name='wireless_sensors')

    # Use raw SQL to drop tables with CASCADE
    op.execute('DROP TABLE IF EXISTS wireless_sensors CASCADE')
    op.execute('DROP TABLE IF EXISTS devices CASCADE')

    op.drop_index('ix_outputs_global_id', table_name='outputs')
    op.drop_table('outputs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('outputs',
    sa.Column('global_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('startTime', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('endTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lastTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wireless_sensor_uid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.CheckConstraint('id >= 1 AND id <= 4', name='id_range_constraint'),
    sa.ForeignKeyConstraint(['wireless_sensor_uid'], ['wireless_sensors.uid'], name='outputs_wireless_sensor_uid_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('global_id', name='outputs_pkey')
    )
    op.create_index('ix_outputs_global_id', 'outputs', ['global_id'], unique=False)
    op.create_table('wireless_sensors',
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], name='wireless_sensors_device_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid', name='wireless_sensors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_wireless_sensors_uid', 'wireless_sensors', ['uid'], unique=False)
    op.create_table('sensor_reading',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('wireless_sensor_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('battery_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rssi', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lastTs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['wireless_sensor_uid'], ['wireless_sensors.uid'], name='sensor_reading_wireless_sensor_uid_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='sensor_reading_pkey')
    )
    op.create_index('ix_sensor_reading_id', 'sensor_reading', ['id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('serial_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='devices_pkey'),
    sa.UniqueConstraint('serial_number', name='devices_serial_number_key')
    )
    # ### end Alembic commands ###
